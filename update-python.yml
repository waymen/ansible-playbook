---
- hosts: "{{ host }}"
  gather_facts: true
  connection: ssh
  remote_user: root
  vars:
    - python_tar: Python-3.8.2.tgz
    - python_install_to: /usr/local/python38
    - openssl_home: /usr/local/openssl
    - build_dir: /tmp

  tasks:
    - name: 发现安装目录信息
      tags: discover
      stat:
        path: "{{ python_install_to }}"
      register: info
    
    - name: 获取openssl目录信息
      tags: get_openssl
      stat:
        path: "{{ openssl_home }}"
      register: ssl_info
    
    - name: "检查python_install_to: {{ python_install_to }}是否存在"
      tags: check-install
      fail:
        msg: "python_install_to: {{ python_install_to }}已经安装"
      when: info.stat.exists and info.stat.isdir

    - name:  "检查opessl: {{ openssl_home }}是否存在"
      tags: check-openssl
      fail:
        msg: "openssl: {{ openssl_home }}不存在的目录"
      when: ( not ssl_info.stat.exists ) or (not ssl_info.stat.isdir)

    - name: 安装依赖包
      tags: install-package
      yum:
        name: [gcc, make, readline, readline-devel, gcc-c++, autoconf, ncurses, ncurses-devel, zlib, zlib-devel]
        state: present

    - name: 上传并解压源码包
      tags: upload
      unarchive:
        src: "files/{{ python_tar }}"
        dest: "{{ build_dir }}"

    - name: 开始编译安装
      shell:
        cmd: ./configure --prefix={{ python_install_to }} --with-openssl={{ openssl_home | quote }} && make -j {{ ansible_processor_vcpus|int|quote }} && make install;
        chdir: "{{ build_dir }}/{{ python_source_dir }}"
      vars:
        python_source_dir: "{{ python_tar | splitext | first }}"

    - name: 添加环境变量
      tags: add-env
      template:
        src: templates/python38.sh.j2
        dest: /etc/profile.d/python38.sh
        backup: yes

    - name: 设置为新的pip和python
      tags: update-pypip
      file:
        src: "{{ python_install_to }}/bin/{{ item.src }}"
        dest: "{{ python_install_to }}/bin/{{ item.dest }}"
        state: link
      loop:
        - { src: pip3, dest: pip }
        - { src: python3, dest: python}

    - name: 清除编译后的文件
      tags: clean-temp
      file:
        path: "{{ build_dir }}/{{ python_source_dir }}"
        state: absent
      vars:
        python_source_dir: "{{ python_tar | splitext | first }}"


